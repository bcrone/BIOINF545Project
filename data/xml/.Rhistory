A <- initA(dim(d)[1],dim(d)[2],1,1)
PA <- initPA(A)
Q <- t(initQ(dim(d)[1],dim(d)[2]))
T <- initT(dim(d)[2],1,1)
S <- initS(dim(d)[1],dim(d)[2],dim(genotypes)[1],Q,T)
C <- dim(d)[2]
L <- dim(genotypes)[2]
# Get H
# H <- assignH(genotypes,S,Q,A,dim(d)[1],T)
H <- S
# Monte Carlo stuff
max_iter = 100
for (iter in 1:max_iter){
print(paste("iteration number",iter))
# Collapse haplotype count by locus
CA <- countHapByLocus(H,4,4)
GA <- countAlleleByLocus(genotypes)
# re-sample T and Q
T <- gibbs_T(4,T,1,1)
Q <- gibbs_Q(4,4,CA)
# update PA (equation 3.5 from thesis)
PA <- updatePA(genotypes,A,L,C,GA)
# sample A (using 4.5 from thesis)
A <- gibbs_A(C,L,1,1,PA,genotypes,S,A)
S_prime <- matrix(NA, nrow=dim(S)[1], ncol=dim(S)[2])
# sample S
for (p in 1:(dim(genotypes)[1]/2)){
for (l in 1:dim(genotypes)[2]){
p_vals <- matrix(nrow=0,ncol=3)
for (i in 1:C){
for (j in 1:C){
forward_prob = forward_S(i,j,l,p,genotypes,S,Q,A,C,T)
P_G_prob = P_G(p,l,i,j,genotypes,S,A)
backward_prob = backward_S(i,j,l,p,genotypes,S,Q,A,C,T)
# print(paste(forward_prob, P_G_prob, backward_prob))
p_vals <- rbind(p_vals, c(i,j, forward_prob * P_G_prob * backward_prob))
}
}
best_fit <- p_vals[which(p_vals[,3] == max(p_vals[,3])),]
S_prime[2*p-1, l] <- best_fit[1]
S_prime[2*p, l] <- best_fit[2]
}
}
S <- S_prime
# assign H' based on new values
# H_prime <- assignH(genotypes,S,Q,A,dim(d)[1],T)
H_prime <- S
# if H' and H are the same, then the algorithm has converged
accuracy_p <- accuracy(H,genotypes,A)
print(accuracy_p)
if (matrix_converged(H_prime, H) & accuracy_p > 0.9){
H = H_prime
# print(iter)
break
}
H <- H_prime
}
A <- initA(dim(d)[1],dim(d)[2],1,1)
PA <- initPA(A)
Q <- t(initQ(dim(d)[1],dim(d)[2]))
T <- initT(dim(d)[2],1,1)
S <- initS(dim(d)[1],dim(d)[2],dim(genotypes)[1],Q,T)
C <- dim(d)[2]
L <- dim(genotypes)[2]
# Get H
# H <- assignH(genotypes,S,Q,A,dim(d)[1],T)
H <- S
# Monte Carlo stuff
max_iter = 100
for (iter in 1:max_iter){
print(paste("iteration number",iter))
# Collapse haplotype count by locus
CA <- countHapByLocus(H,4,4)
GA <- countAlleleByLocus(genotypes)
# re-sample T and Q
T <- gibbs_T(4,T,1,1)
Q <- t(gibbs_Q(4,4,CA))
# update PA (equation 3.5 from thesis)
PA <- updatePA(genotypes,A,L,C,GA)
# sample A (using 4.5 from thesis)
A <- gibbs_A(C,L,1,1,PA,genotypes,S,A)
S_prime <- matrix(NA, nrow=dim(S)[1], ncol=dim(S)[2])
# sample S
for (p in 1:(dim(genotypes)[1]/2)){
for (l in 1:dim(genotypes)[2]){
p_vals <- matrix(nrow=0,ncol=3)
for (i in 1:C){
for (j in 1:C){
forward_prob = forward_S(i,j,l,p,genotypes,S,Q,A,C,T)
P_G_prob = P_G(p,l,i,j,genotypes,S,A)
backward_prob = backward_S(i,j,l,p,genotypes,S,Q,A,C,T)
# print(paste(forward_prob, P_G_prob, backward_prob))
p_vals <- rbind(p_vals, c(i,j, forward_prob * P_G_prob * backward_prob))
}
}
best_fit <- p_vals[which(p_vals[,3] == max(p_vals[,3])),]
S_prime[2*p-1, l] <- best_fit[1]
S_prime[2*p, l] <- best_fit[2]
}
}
S <- S_prime
# assign H' based on new values
# H_prime <- assignH(genotypes,S,Q,A,dim(d)[1],T)
H_prime <- S
# if H' and H are the same, then the algorithm has converged
accuracy_p <- accuracy(H,genotypes,A)
print(accuracy_p)
if (matrix_converged(H_prime, H) & accuracy_p > 0.9){
H = H_prime
# print(iter)
break
}
H <- H_prime
}
?rpois
rpois(n=10000,lambda=36)
vars <- rpois(n=10000,lambda=36)
summary(vars)
mean(rpois)
mean(vars)
var(vars)
hist(vars)
hist(vars,main='Poisson Distribution (lambda=36, n=10000)',xlab='Sampled value')
rbinom(n=10000,size=1/(0.05),mu=36)
?rbinom
?rnbinom
rnbinom(n=10000,size=1/(0.05),mu=36)
vars <- rnbinom(n=10000,size=1/(0.05),mu=36)
mean(vars)
var(vars)
hist(vars)
hist(vars,main='Overdispersed Poisson Distribution (mu=36, size=1/(0.05), n=10000)',xlab='Sampled value')
36 + (0.05 *36^2)
100.142 / 35.7556
ddsHTSeq <- DESeq(ddsHTSeq)
ppois(20,15,lower.tail=FALSE)
ppois(89,15,lower.tail=FALSE)
ppois(27,15,lower.tail=FALSE)
ppois(13,15,lower.tail=FALSE)
ppois(112,15,lower.tail=FALSE)
ppois(18,15,lower.tail=FALSE)
load("/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Homework/HW4/Motif_data.Rdata")
View(ClinVarClassByPopulation)
load("/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Homework/HW4/Motif_data.Rdata")
hist(motif1)
hist(motif2)
motif1
motif1$motif.loc
motif1[,1]/motif1[,2]
hist(motif1[,1]/motif1[,2])
hist(motif2[,1]/motif2[,2])
hist(motif1[,1]/motif1[,2],main="Motif1 Peak Center",xlab="Relative Peak Center")
hist(motif2[,1]/motif2[,2],main="Motif2 Peak Center",xlab="Relative Peak Center")
library(DESeq2)
install.packages('DESeq2')
library(DESeq2)
install.packages('BiocManager')
BiocManager::install("DESeq2")
library(DESeq2)
rootDirectory <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data"
subDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recurssive=TRUE)
subDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recursive=TRUE)
subDirectory
subDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recursive=FALSE)
subDirectory
subject <- list.dirs(path=rootDirectory, full.names=FALSE, recursive=FALSE)
subject
list.dirs(path=subjectDirectory)
subjectDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recursive=FALSE)
list.dirs(path=subjectDirectory)
subjectDirectory
list.dirs(path=subjectDirectory,include.dirs=FALSE)
list.dirs(path=subjectDirectory,recursive=FALSE)
rootDirectory <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data"
subjectDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recursive=FALSE)
subject <- list.dirs(path=rootDirectory, full.names=FALSE, recursive=FALSE)
sampleDirectory <- list.dirs(path=subjectDirectory, full.names=TRUE, recursive=FALSE)
samples <- list.dirs(path=subjectDirectory, full.names=FALSE, recursive=FALSE)
list.files(sampleDirectory,pattern='htseq.counts.gz')
sampleFilesPath <- list.file(path=samplesDirectory, full.names=TRUE, recursive=FALSE)
sampleFilesPath <- list.files(path=samplesDirectory, full.names=TRUE, recursive=FALSE)
sampleFilesPath <- list.files(path=sampleDirectory, full.names=TRUE, recursive=FALSE)
sampleFilesPath
sampleFilesPath <- list.files(path=sampleDirectory, pattern="htseq.count.gz", full.names=TRUE, recursive=FALSE)
sampleFilesPath
sampleFilesPath <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=FALSE)
sampleFilesPath
sampleFiles <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=FALSE, recursive=FALSE)
sampleFiles <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=FALSE, recursive=FALSE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",sampleFiles),fileName=sampleFilesPath,ID=subject)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",sampleFiles),fileName=sampleFilesPath)
sampleTable
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",sampleFilesPath),fileName=sampleFilesPath)
sampleTable
sampleTable[1,]
strsplit(sampleFilesPath,"/")
tableSplit <- strsplit(sampleFilesPath,"/")
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[13]),fileName=tableSplit[13],
sampleID=tableSplit[12],subjectID=tableSplit[11])
sampleTable
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit
tableSplit <- strsplit(sampleFilesPath,"/")
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=tableSplit[,13],
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
tableSplit
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[13]),fileName=tableSplit[13],
sampleID=tableSplit[12],subjectID=tableSplit[11])
sampleTable
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=tableSplit[,13],
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleTable
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleTable
list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=FALSE)
list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
length(sampleFilesPath)
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleTable
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE,
recursive=TRUE, no..=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11]
)
sampleTable
subjectDirectory <- list.dirs(path=rootDirectory, full.names=TRUE, recursive=FALSE)
subject <- list.dirs(path=rootDirectory, full.names=FALSE, recursive=FALSE)
sampleDirectory <- list.dirs(path=subjectDirectory, full.names=TRUE, recursive=FALSE)
samples <- list.dirs(path=subjectDirectory, full.names=FALSE, recursive=FALSE)
sampleFilesPath <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
sampleFiles <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=FALSE, recursive=FALSE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11]
)
samples
sampleFilesPath <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=FALSE)
sampleFiles <- list.files(path=sampleDirectory, pattern="htseq.counts.gz", full.names=FALSE, recursive=FALSE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recurssive=TRUE)
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
sampleTable
sampleTable$sampleName
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11],stringsAsFactors=FALSE)
sampleTable
sampleTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=sampleFilesPath,
sampleID=tableSplit[,12],subjectID=tableSplit[,11],sampleType=gsub("^.*-","",tableSplit[,12]),
stringsAsFactors=FALSE)
sampleTable
sampleTable$sampleType
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=fileName,design=~sampleID+sampleType)
library(DESeq2)
namespaceImport(biocond)
BiocManager::install("DESeq2")
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=fileName,design=~sampleID+sampleType)
rootDirectory
rootDirectory <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/"
library(DESeq2)
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
htseq.path <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/htseq/"
updated.path <- paste(htseq.path, gsub(".gz","",tableSplit[,13]),sep="")
masterTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=gsub(".gz","",tableSplit[,13]),
sampleID=tableSplit[,12],subjectID=tableSplit[,11],sampleType=gsub("^.*-","",tableSplit[,12]))
sampleTable <-data.frame(sampleName=masterTable$sampleName,fileName=masterTable$fileName,
sampleType=masterTable$sampleType,sampleID=masterTable$sampleID)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~sampleType)
ddsHTSeq <- ddsHTSeq[rowSums(counts(ddsHTSeq))>=dim(ddsHTSeq)[2],]
ddsHTSeq <- DESeq(ddsHTSeq)
updated.path
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
tableSplit
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
sampleFilesPath
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit
sampleFilesPath
rootDirectory <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data"
htseq.path <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/htseq/"
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
tableSplit
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
tableSPlit
tableSplit
htseq.path <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/htseq/"
updated.path <- paste(htseq.path, gsub(".gz","",tableSplit[,13]),sep="")
updated.path
masterTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=updated.path,
sampleID=tableSplit[,12],subjectID=tableSplit[,11],sampleType=gsub("^.*-","",tableSplit[,12]))
masterTable
sampleTable <-data.frame(sampleName=masterTable$sampleName,fileName=masterTable$fileName,
sampleType=masterTable$sampleType,sampleID=masterTable$sampleID)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~sampleType)
ddsHTSeq <- ddsHTSeq[rowSums(counts(ddsHTSeq))>=dim(ddsHTSeq)[2],]
ddsHTSeq <- DESeq(ddsHTSeq)
sampleTable
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~sampleType)
masterTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=gsub(".gz","",tableSplit[,13]),
sampleID=tableSplit[,12],subjectID=tableSplit[,11],sampleType=gsub("^.*-","",tableSplit[,12]))
sampleTable <-data.frame(sampleName=masterTable$sampleName,fileName=masterTable$fileName,
sampleType=masterTable$sampleType,sampleID=masterTable$sampleID)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~sampleType)
ddsHTSeq <- ddsHTSeq[rowSums(counts(ddsHTSeq))>=dim(ddsHTSeq)[2],]
ddsHTSeq <- DESeq(ddsHTSeq)
colData(ddsHTSeq)
res <- results(ddsHTSeq)
res
?rlog
rld <- vst(ddsHTSeq)
rld
plotPCA(rld)
colData(ddsHTSeq)
plotPCA(rld,ingroup=c("sampleType"))
plotPCA(rld,intgroup=c("sampleType"))
plotPCA(rld,intgroup=c("sampleType","sampleID"))
plotPCA(rld,intgroup=c("sampleType"))
twoCatTable <- sampleTable[sampleTable$sampleType=="01A" | sampleTable$sampleType=="11A",]
twoCatTable
ddsHTSeq.twoCat <- DESeqDataSetFromHTSeqCount(sampleTable=twoCatTable,directory=htseq.path,design=~sampleType)
ddsHTSeq.twoCat$sampleType
ddsHTSeq.twoCat <- ddsHTSeq.twoCat[rowSums(counts(ddsHTSeq))>=dim(ddsHTSeq)[2],]
ddsHTSeq.twoCat <- DESeq(ddsHTSeq.twoCat)
rld.twoCat <- vst(ddsHTSeq.twoCat)
colData(ddsHTSeq)
res <- results(ddsHTSeq,contrast=c("sampleType", "01A", "11A"),pAdjustMethod="fdr")
res
plotPCA(rld.twoCat,intgroup=c("sampleType"))
res <- results(ddsHTSeq.twoCat,contrast=c("sampleType","01A","11A"),pAdjustMethod="fdr")
res
summary(res)
plotPCA(rld,intgroup=c("sampleType"))
plotPCA(rld.twoCat,intgroup=c("sampleType"))
table(sampleTable$sampleName)
table(sampleTable$sampleID)
table(sampleTable$sampleID)>1
table(sampleTable$sampleID)
table(masterTable$subjectID)
masterTable[duplicated(masterTable$subjectID),]
n_occur <- data.frame(table(masterTable$sampleID))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(masterTable$subjectID))
n_occur[n_occur$Freq > 1,]
masterTable[masterTable$subjectID %in% n_occur$Var1[n_occur$Freq>1],]
ddsHTSeq.twoCat <- ddsHTSeq.twoCat[rowSums(counts(ddsHTSeq.twoCat))>=dim(ddsHTSeq.twoCat)[2],]
ddsHTSeq.twoCat <- DESeq(ddsHTSeq.twoCat)
rld.twoCat <- vst(ddsHTSeq.twoCat)
plotPCA(rld.twoCat,intgroup=c("sampleType"))
plotPCA(rld.twoCat,intgroup=c("sampleType"),main="Two Category")
plotPCA(rld.twoCat,intgroup=c("sampleType"))
n_occur <- data.frame(table(masterTable$subjectID))
mutliples <- masterTable[masterTable$subjectID %in% n_occur$Var1[n_occur$Freq>1],]
multiplesTable <- data.frame(sampleName=multiples$sampleName,fileName=multiples$fileName,
sampleType=multiples$sampleType,sampleID=multiples$sampleID
)
mutliples <- masterTable[masterTable$subjectID %in% n_occur$Var1[n_occur$Freq>1],]
multiples <- masterTable[masterTable$subjectID %in% n_occur$Var1[n_occur$Freq>1],]
multiplesTable <- data.frame(sampleName=multiples$sampleName,fileName=multiples$fileName,
sampleType=multiples$sampleType,sampleID=multiples$sampleID)
ddsHTSeq.multiple <- DESeqDatSetFromHTSeqCount(sampleTable=mutliplesTable,directory=htseq.path,design=~sampleType)
ddsHTSeq.multiple <- DESeqDataSetFromHTSeqCount(sampleTable=mutliplesTable,directory=htseq.path,design=~sampleType)
ddsHTSeq.multiple <- DESeqDataSetFromHTSeqCount(sampleTable=multiplesTable,directory=htseq.path,design=~sampleType)
ddsHTSeq.multiple <- ddsHTSeq.multiple[rowSums(counts(ddsHTSeq.multiple))>=dim(ddsHTSeq.multiple)[2],]
ddsHTSeq.multiple <- DESeq(ddsHTSeq.multiple)
rld.multiple <- vst(ddsHTSeq.multiple)
plotPCA(rld.multiple,intgroup=c("sampleType"))
length(sampleTable)
dims(sampleTable)
dim(sampleTable)
dim(twoCatTable)
dim(multiplesTable)
multiplesTable
library(RTCGAToolbox)
install.packages("RTCGAToolbox")
View(mutliples)
source("https://bioconductor.org/biocLite.R")
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
file.type = "xml",
barcode = masterTable$subjectID)
query
query$barcode
getwd()
setwd("/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/xml")
GDCdownload(query)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
clinical
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
rootDirectory <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data"
sampleFilesPath <- list.files(path=rootDirectory, pattern="htseq.counts.gz", full.names=TRUE, recursive=TRUE)
tableSplit <- strsplit(sampleFilesPath,"/")
tableSplit <- matrix(unlist(tableSplit),ncol=13,byrow=TRUE)
htseq.path <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/htseq/"
xml.path <- "/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/xml/"
updated.path <- paste(htseq.path, gsub(".gz","",tableSplit[,13]),sep="")
masterTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=gsub(".gz","",tableSplit[,13]),
sampleID=tableSplit[,12],subjectID=tableSplit[,11],sampleType=gsub("^.*-","",tableSplit[,12]))
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
file.type = "xml",
barcode = masterTable$subjectID)
GDCdownload(query,directory="/Users/bcrone/Documents/CLASS/Winter20/BIOINF545/Project/BIOINF545Project/data/xml/")
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
names(clinical)
clinical$tumor_tissue_site
clinical
clinical$stage_event_pathologic_stage
names(clinical)
tumorStage <- data.frame(subjectID=clinical$bcf_patient_barcode, stage=clinical$stage_event_pathologic_stage)
tumorStage <- data.frame(subjectID=clinical$bcr_patient_barcode, stage=clinical$stage_event_pathologic_stage)
tumorStage
levels(tumorStage$stage)
tumorStage$stage <- gsub("Stage IA","stage_1",tumorStage$stage)
tumorStage$stage
levels(tumorStage$stage)
tumorStage$stage <- gsub("Stage IIA|Stage IIB|Stage IIC","stage_2",tumorStage$stage)
tumorStage$stage <- gsub("Stage IIIA|Stage IIIB|Stage IIIC","stage_3",tumorStage$stage)
tumorStage$stage <- gsub("Stage IVA|Stage IVB","stage_4",tumorStage$stage)
tumorStage$stage
tumorStage$stage <- gsub("Stage IVA","stage_4",tumorStage$stage)
tumorStage$stage <- gsub("Stage III","stage_3",tumorStage$stage)
tumorStage$stage <- gsub("Stage II","stage_2",tumorStage$stage)
tumorStage$stage <- gsub("Stage I","stage_1",tumorStage$stage)
tumorStage$stage <- gsub("Stage IV","stage_4",tumorStage$stage)
tumorStage$stage
tumorStage$stage <- gsub("stage_1V","stage_4",tumorStage$stage)
tumorStage$stage <- droplevels(tumorStage$stage)
tumorStage <- droplevels(tumorStage$stage)
tumorStage <- droplevels(tumorStage)
levels(tumorStage)
class(tumorStage$stage)
tumorStage$stage <- as.factor(tumorStage$stage)
levels(tumorStage)
levels(tumorStage$stage)
masterTable <- merge(masterTable,tumorStage,by="subjectID")
names(masterTable)
masterTable <- data.frame(sampleName=gsub(".htseq.counts.gz","",tableSplit[,13]),fileName=gsub(".gz","",tableSplit[,13]),
sampleID=tableSplit[,12],subjectID=tableSplit[,11])
tumorStage <- data.frame(subjectID=clinical$bcr_patient_barcode, stage=clinical$stage_event_pathologic_stage)
tumorStage$stage <- gsub("Stage IA","stage_1",tumorStage$stage)
tumorStage$stage <- gsub("Stage IIA|Stage IIB|Stage IIC","stage_2",tumorStage$stage)
tumorStage$stage <- gsub("Stage IIIA|Stage IIIB|Stage IIIC","stage_3",tumorStage$stage)
tumorStage$stage <- gsub("Stage IVA|Stage IVB","stage_4",tumorStage$stage)
tumorStage$stage <- gsub("Stage IV","stage_4",tumorStage$stage)
tumorStage$stage <- gsub("Stage III","stage_3",tumorStage$stage)
tumorStage$stage <- gsub("Stage II","stage_2",tumorStage$stage)
tumorStage$stage <- gsub("Stage I","stage_1",tumorStage$stage)
tumorStage$stage <- as.factor(tumorStage$stage)
masterTable <- merge(masterTable,tumorStage,by="subjectID")
masterTable
levels(masterTable$stage)
masterTable[masterTable$stage=="",]
sampleTable <- data.frame(sampleName=masterTable$sampleName,fileName=masterTable$fileName,
stage=masterTable$stage,sampleID=masterTable$sampleID)
sampleTable
masterTable <- masterTable[masterTable$stage!="",]
sampleTable <- data.frame(sampleName=masterTable$sampleName,fileName=masterTable$fileName,
stage=masterTable$stage,sampleID=masterTable$sampleID)
sampleTable
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~stage)
ddsHTSeq
dim(sampleTable)
sampleTable
class(sampleTable$sampleName )
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~stage)
n_occur <- data.frame(table(sampleTable$sampleName))
n_occur[n_occur$Freq>1]
n_occur[n_occur$Freq>1,]
sampleTable[sampleTable$sampleName=="00106523-5b1d-44ad-a9f1-7d84db08722c",]
sampleTable[!duplicated(sampleTable$sampleName)]
sampleTable[!duplicated(sampleTable$sampleName),]
sampleTable[duplicated(sampleTable$sampleName),]
sampleTable[order(duplicated(sampleTable$sampleName)),]
sampleTable[duplicated(sampleTable$sampleName),]
sampleTable <- sampleTable[!duplicated(sampleTable$sampleName),]
sampleTable[sampleTable$sampleName=="bb8a0f58-11e6-49dd-bdeb-0b7eb2fb05fc",]
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,directory=htseq.path,design=~stage)
dim(sampleTable)
ddsHTSeq <- ddsHTSeq[rowSums(counts(ddsHTSeq))>=dim(ddsHTSeq)[2],]
ddsHTSeq <- DESeq(ddsHTSeq)
rld <- vst(ddsHTSeq)
plotPCA(rld,intgroup=c("sampleType"))
plotPCA(rld,intgroup=c("stage"))
